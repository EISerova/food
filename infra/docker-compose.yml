version: '3.3'
services:
  db:
    container_name: db
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    restart: always
  web:
    image: katyaserova/foodgram_backend:v3
    container_name: foodgram
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    ports:
      - "8000:80"
    env_file:
      - ./.env
    depends_on:
      - db
    restart: always

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    ports:
      - '5050:80'
    env_file:
      - ./.env
    depends_on:
      - db

volumes:
  static_value:
  media_value:
  postgres_data:
